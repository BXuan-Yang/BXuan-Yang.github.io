(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{341:function(t,a,s){"use strict";s.r(a);var r=s(10),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"进程间有哪些通信方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程间有哪些通信方式"}},[t._v("#")]),t._v(" 进程间有哪些通信方式？")]),t._v(" "),a("p",[t._v("每个进程的用户地址空间都是独立的，不能相互访问的，但是内核空间是每个进程都共享的，所以进程之间要通信必须通过内核。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230310155901628.png",alt:"image-20230310155901628"}})]),t._v(" "),a("h2",{attrs:{id:"管道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管道"}},[t._v("#")]),t._v(" 管道")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("匿名管道")])]),t._v(" "),a("li",[a("p",[t._v("命名管道")])])]),t._v(" "),a("h2",{attrs:{id:"消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息队列"}},[t._v("#")]),t._v(" 消息队列")]),t._v(" "),a("h2",{attrs:{id:"共享内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#共享内存"}},[t._v("#")]),t._v(" 共享内存")]),t._v(" "),a("h2",{attrs:{id:"信号量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#信号量"}},[t._v("#")]),t._v(" 信号量")]),t._v(" "),a("p",[t._v("用共享内存的通信方式，会带来一个 内存覆盖 的问题。假设这样一种情况，多个线程同时正在修改同一个共享的内存区域，那么就很有可能发生冲突。为了防止多个进程竞争共享资源，造成数据混乱，所以需要保护机制，使得共享的资源，在任意时刻只能被一个进程访问。信号量就是一个很好的实现机制。")]),t._v(" "),a("p",[t._v("信号量其实是一个整形的计数器，主要用于实现进程之间的互斥与同步的操作，而不是用于缓存进程间通信的数据。")]),t._v(" "),a("p",[t._v("信号量表示的是资源的数量，控制信号量的操作有两种：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("P 操作")]),t._v("：这个操作会把信号量减去 1，相减后如果信号量 < 0，则表明资源已被占用，进程需阻塞等待；相减后如果信号量 >= 0，则表明还有资源可使用，进程可正常继续执行；")]),t._v(" "),a("li",[a("strong",[t._v("V 操作")]),t._v("：这个操作会把信号量加上 1，相加后如果信号量 <= 0，则表明当前有阻塞中的进程，于是会将该进程唤醒运行；相加后如果信号量 > 0，则表明当前没有阻塞中的进程；")])]),t._v(" "),a("p",[t._v("P 操作是用在进入共享资源之前的，V 操作是用在共享资源之后的，这两个操作必须是成对出现的。")]),t._v(" "),a("h2",{attrs:{id:"信号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#信号"}},[t._v("#")]),t._v(" 信号")]),t._v(" "),a("h2",{attrs:{id:"socket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#socket"}},[t._v("#")]),t._v(" Socket")])])}),[],!1,null,null,null);a.default=v.exports}}]);