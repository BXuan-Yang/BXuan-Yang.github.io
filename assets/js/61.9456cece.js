(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{340:function(v,_,t){"use strict";t.r(_);var a=t(10),g=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"输入一个网址直到网页显示的期间-发生了什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#输入一个网址直到网页显示的期间-发生了什么"}},[v._v("#")]),v._v(" 输入一个网址直到网页显示的期间，发生了什么？")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410155639685.png",alt:"image-20230410155639685"}})]),v._v(" "),_("h2",{attrs:{id:"http"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[v._v("#")]),v._v(" HTTP")]),v._v(" "),_("blockquote",[_("p",[v._v("解析 URL")])]),v._v(" "),_("p",[v._v("浏览器要做的第一步工作就是对输入的 URL 进行解析，从而生成发送给 Web 服务器的请求信息。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410155832610.png",alt:"image-20230410155832610"}})]),v._v(" "),_("p",[v._v("图中输入的很长的 URL 其实就是对服务器中的一些资源进行请求的操作。")]),v._v(" "),_("blockquote",[_("p",[v._v("要是上述 URL 中蓝色的部分省略了怎么办？")])]),v._v(" "),_("p",[v._v("当没有路径名的时候，就访问根目录下实现设置的默认文件，也就是 ./index.html 或者 ./default.html 这些文件。")]),v._v(" "),_("blockquote",[_("p",[v._v("生产 HTTP 信息")])]),v._v(" "),_("p",[v._v("对 URL 进行解析之后，浏览器就确定了 Web 服务器和需要访问的文件名，接下来就是根据这些信息来生成 HTTP 请求信息。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410160256564.png",alt:"image-20230410160256564"}})]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410160309379.png",alt:"image-20230410160309379"}})]),v._v(" "),_("h2",{attrs:{id:"dns"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[v._v("#")]),v._v(" DNS")]),v._v(" "),_("blockquote",[_("p",[v._v("DNS - 真实地址查询")])]),v._v(" "),_("p",[v._v("通过浏览器解析 URL 生成 HTTP 信息之后，需要委托操作系统将信息发送给 Web 服务器。")]),v._v(" "),_("p",[v._v("但是在发送信息之前，需要先知道接收方服务器的 IP 地址，就像是我们打电话一样，需要提前知道对方的手机号。")]),v._v(" "),_("p",[v._v("有一种服务器专门保存了 Web 服务器域名与 IP 的对应关系，就是 DNS 服务器")]),v._v(" "),_("blockquote",[_("p",[v._v("域名的层级关系")])]),v._v(" "),_("p",[v._v("DNS 中的域名都是使用 句号 来分割的，例如：www.baidu.com，这里的句号代表了不同层次之前的界限。在域名中，"),_("strong",[v._v("越靠右的位置表示层级越高")]),v._v("。实际上在域名的最后还有一个点，只是被省略了，最后一个点代表根域名。")]),v._v(" "),_("p",[v._v("也就是说，. 根域在最顶层，下一层就是 .com 顶层域，在下面就是 .baidu.com。")]),v._v(" "),_("p",[v._v("域名的层级关系类似一个树状结构：")]),v._v(" "),_("ul",[_("li",[v._v("根 DNS 服务器（.）")]),v._v(" "),_("li",[v._v("顶级域 DNS 服务器（.com）")]),v._v(" "),_("li",[v._v("权威 DNS 服务器（baidu.com）")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410161657317.png",alt:"image-20230410161657317"}})]),v._v(" "),_("p",[v._v("根域的 DNS 服务器信息保存在互联网中所有的 DNS 服务器中。任何 DNS 服务器都可以找到并访问根域 DNS 服务器。")]),v._v(" "),_("p",[v._v("因此，只要客户端能够找到任意一台 DNS 服务器A，就可以先通过 A 先找到根域服务器，再通过根域服务器找到其下层所属的 DNS 服务器B。")]),v._v(" "),_("blockquote",[_("p",[v._v("域名解析的流程")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410162338368.png",alt:"image-20230410162338368"}})]),v._v(" "),_("blockquote",[_("p",[v._v("是不是每次解析域名都是需要去访问根域呢？")])]),v._v(" "),_("p",[v._v("不是，因为在浏览器中含有缓存。")]),v._v(" "),_("p",[v._v("浏览器会先看 **浏览器自身缓存 **中有没有这个域名对应的 IP 地址，有的话可以直接返回。如果没有，再去 "),_("strong",[v._v("操作系统的缓存")]),v._v(" 中查找，有的话也可以直接返回。如果还是没有，再去 "),_("strong",[v._v("hosts")]),v._v(" 文件看。如果还是没有，就按照上图流程进行访问根域进行访问。")]),v._v(" "),_("h2",{attrs:{id:"协议栈"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#协议栈"}},[v._v("#")]),v._v(" 协议栈")]),v._v(" "),_("p",[v._v("协议栈的内部分为几个部分，分别承担不同的工作。")]),v._v(" "),_("p",[v._v("上下关系是由一定的规则的，上面部分会向下面部分委托工作，下面部分会收到上面部分的委托并执行工作。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410162840401.png",alt:"image-20230410162840401"}})]),v._v(" "),_("ul",[_("li",[v._v("应用程序（浏览器等）首先调用 Socket 库，来委托协议栈进行工作（"),_("strong",[v._v("上层部分委托下层部分共工作")]),v._v("）")]),v._v(" "),_("li",[v._v("协议栈上半部分由两部分组成，分别是 TCP 与 UDP 协议。这两个传输协议会接收应用层的委托然后执行收发数据的操作")]),v._v(" "),_("li",[v._v("协议栈下半部分是利用 IP 协议控制网络包进行收发的操作。在互联网上上传数据时，数据会被切分成一块一块的网络包，而传输网络包这一操作就是由 IP 负责的。此外 IP 协议还包含 ICMP 和 ARP 协议\n"),_("ul",[_("li",[v._v("ICMP：用于告知网络包传输过程中产生的错误以及各种控制信息")]),v._v(" "),_("li",[v._v("ARP：用于根据 IP 地址查询相应的以太网 MAC 地址")])])]),v._v(" "),_("li",[v._v("IP 下面的网卡驱动程序负责控制网卡硬件")]),v._v(" "),_("li",[v._v("最下面的网卡则负责完成实际的收发操作，也就是对网线中的信号执行发送和接收操作。")])]),v._v(" "),_("h2",{attrs:{id:"tcp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[v._v("#")]),v._v(" TCP")]),v._v(" "),_("p",[v._v("HTTP 协议是基于 TCP协议传输的。")]),v._v(" "),_("blockquote",[_("p",[v._v("TCP包的头格式")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410163852918.png",alt:"image-20230410163852918"}})]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("源端口号、目标端口号")]),v._v("：如果没有这两个端口号，数据就不知道应该发送给哪个应用")]),v._v(" "),_("li",[_("strong",[v._v("序号")]),v._v("：解决包乱序的问题")]),v._v(" "),_("li",[_("strong",[v._v("确认序列")]),v._v("：确认对方是否收到数据，如果没有就应该重新发送。解决丢包的问题")]),v._v(" "),_("li",[_("strong",[v._v("状态位")]),v._v(" "),_("ul",[_("li",[v._v("SYN：发起连接")]),v._v(" "),_("li",[v._v("ACK：回复")]),v._v(" "),_("li",[v._v("RST：重新连接")]),v._v(" "),_("li",[v._v("FIN：结束连接")])])]),v._v(" "),_("li",[_("strong",[v._v("窗口大小")]),v._v("：TCP 要做流量控制，通信双方都会各声明一个窗口大小（缓存大小），标识自己当前能够处理的能力大小")])]),v._v(" "),_("blockquote",[_("p",[v._v("在 TCP 进行传输数据之前，需要进行三次握手进行连接")])]),v._v(" "),_("p",[v._v("三次握手的目的是为了保证 连接的双方都有传输和接收数据的能力")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410164624822.png",alt:"image-20230410164624822"}})]),v._v(" "),_("blockquote",[_("p",[v._v("如何查看当前 TCP 的连接状态")])]),v._v(" "),_("p",[v._v("Linux：netstart -napt")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410164838119.png",alt:"image-20230410164838119"}})]),v._v(" "),_("blockquote",[_("p",[v._v("TCP分割数据")])]),v._v(" "),_("p",[v._v("如果当前 HTTP 请求信息过长，超过了 MSS 的长度，这时候 TCP 就需要把 HTTP 的数据拆解成一块一块的数据块进行发送，而不是一次性发送所有的数据。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410165002350.png",alt:"image-20230410165002350"}})]),v._v(" "),_("ul",[_("li",[v._v("MTU：一个网络包的最大长度，以太网中一般是 1500 字节")]),v._v(" "),_("li",[v._v("MSS：MTU 除去 IP头部 和 TCP头部，一个网络包所能容纳的 TCP 数据的最大长度。")])]),v._v(" "),_("p",[v._v("数据会被以 MSS 的长度为单位进行拆分，拆分出来的每一块数据都会被放进单独的网络包中。也就是在每个被拆分的数据加上 TCP 头信息，然后交给 IP 模块来发送数据。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410165257628.png",alt:"image-20230410165257628"}})]),v._v(" "),_("blockquote",[_("p",[v._v("TCP 报文生成")])]),v._v(" "),_("p",[v._v("在双方建立连接之后，TCP 报文中的数据部分就是存放 "),_("strong",[v._v("HTTP头部 + 数据")]),v._v("。组装好 TCP 报文后，就需要交给下一层的网络层处理。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410165554999.png",alt:"image-20230410165554999"}})]),v._v(" "),_("h2",{attrs:{id:"ip"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ip"}},[v._v("#")]),v._v(" IP")]),v._v(" "),_("p",[v._v("TCP 模块在执行连接、收发、断开等各阶段操作时，都需要委托 IP 模块将数据封装成网络包发送给通信对象")]),v._v(" "),_("blockquote",[_("p",[v._v("IP包的头格式")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/14.jpg",alt:"IP 包头格式"}})]),v._v(" "),_("p",[v._v("在 IP 协议里面需要有 源地址IP 和 目的地址IP：")]),v._v(" "),_("ul",[_("li",[v._v("源地址IP：客户端输出的 IP 地址")]),v._v(" "),_("li",[v._v("目的地址IP：通过 DNS 域名解析得到的 Web 服务器 IP")])]),v._v(" "),_("p",[v._v("因为 HTTP 是经过 TCP 传输的，所以在 IP 包头的协议号中，要填写为 06（十六进制），表示该协议为 TCP。")]),v._v(" "),_("blockquote",[_("p",[v._v("假设客户端有多个网卡，就会有多个 IP 地址，那 IP 头部的源地址应该选择哪个 IP 呢？")])]),v._v(" "),_("p",[v._v("当存在多个网卡时，在填写源地址 IP 时，就需要判断到底应该填写哪个地址。这个判断就相当于在多个网卡中选择一块网卡进行发送。这个时候就需要 "),_("strong",[v._v("路由表")]),v._v(" 规则，来判断哪一个网卡作为源地址 IP。")]),v._v(" "),_("p",[v._v("Linux：route -n")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410172112294.png",alt:"image-20230410172112294"}})]),v._v(" "),_("p",[v._v("我们假设 Web 服务器的目的地址是 192.168.10.200，那么根据 "),_("strong",[v._v("路由表")]),v._v(" 规则如下：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410172327509.png",alt:"image-20230410172327509"}})]),v._v(" "),_("blockquote",[_("p",[v._v("IP报文生成")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/17.jpg",alt:"IP 层报文"}})]),v._v(" "),_("h2",{attrs:{id:"mac"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mac"}},[v._v("#")]),v._v(" MAC")]),v._v(" "),_("p",[v._v("在上述生成了 IP 头部之后，接下来网络包还需要在 IP 头部的前面加上 MAC头部")]),v._v(" "),_("blockquote",[_("p",[v._v("MAC包头格式")])]),v._v(" "),_("p",[v._v("MAC 头部是以太网使用的头部，包含了 发送方和接收方的 MAC 地址信息。")]),v._v(" "),_("p",[v._v("在 MAC 包头里需要 发送方 MAC 地址和接收方 MAC 地址，来确定两点之间的传输。")]),v._v(" "),_("p",[v._v("一般的 TCP / IP 通信里，MAC 包头的协议类型只使用：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("0800")]),v._v(" ： IP 协议")]),v._v(" "),_("li",[_("code",[v._v("0806")]),v._v(" ： ARP 协议")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/18.jpg",alt:"MAC 包头格式"}})]),v._v(" "),_("blockquote",[_("p",[v._v("MAC发送方和接收方如何确认？")])]),v._v(" "),_("p",[v._v("发送方的 MAC 地址获取就比较简单，MAC 地址是网卡生产出来的时候就写到 ROM 里面的，需要这个值的时候读取出来然后写到 MAC 头部就可以")]),v._v(" "),_("p",[v._v("接收方的 MAC 地址，只要告诉以太网 接收方的 MAC 地址，以太网会将包发送过去，所以这里填写的是接收方的 MAC 地址。")]),v._v(" "),_("p",[v._v("在这里可以使用 路由表 规则来确定包最终需要发送的位置。在路由表中找到相匹配的条目，然后将包发给 Gateway 对应的 IP 地址即可。")]),v._v(" "),_("blockquote",[_("p",[v._v("如何获得对方的 MAC 地址？")])]),v._v(" "),_("p",[v._v("使用 ARP 协议可以帮助我们找到路由器的 MAC 地址。ARP 协议会在以太网中以 广播 的形式，对以太网中的所有设备进行验证，直至找到对应的 MAC 地址的主机。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410184051365.png",alt:"image-20230410184051365"}})]),v._v(" "),_("blockquote",[_("p",[v._v("什么是 ARP 协议？")])]),v._v(" "),_("p",[v._v("ARP 协议，"),_("strong",[v._v("地址解析协议")]),v._v("。是根据 IP 地址获取物理地址（MAC 地址）的一个 TCP / IP 协议。主机发送消息时将包含目的 IP 地址的 ARP 请求 "),_("strong",[v._v("广播")]),v._v(" 到局域网络上的所有主机，并接受返回消息，以此来确定目标的物理地址；收到返回消息后将该 IP 地址和物理地址存入本机 ARP 缓存中并保存一段时间，下次请求时直接查询 ARP 缓存以节约资源。")]),v._v(" "),_("p",[v._v("地址解析协议是建立在网络中各个主机互相信任的基础上的，局域网络上的主机可以自主发送 ARP 应答消息，其他主机在收到应答报文时不会去检测该报文的真实性就将该报文存入本机 ARP 缓存。因此攻击者可以向某一个主机发送 伪ARP应答报文，使其大宋的信息无法到达预期的主机或者到达错误的主机，这样就形成了一个 "),_("strong",[v._v("ARP欺骗")]),v._v("。")]),v._v(" "),_("blockquote",[_("p",[v._v("如何查询 ARP 缓存内容？")])]),v._v(" "),_("p",[v._v("Linux：arp -a")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410185131577.png",alt:"image-20230410185131577"}})]),v._v(" "),_("blockquote",[_("p",[v._v("MAC 报文生成")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/21.jpg",alt:"MAC 层报文"}})]),v._v(" "),_("h2",{attrs:{id:"网卡"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#网卡"}},[v._v("#")]),v._v(" 网卡")]),v._v(" "),_("p",[v._v("网络包只是存放在内存中的一串二进制数字信息，没有办法直接发送给接收方。所以，我们需要将 "),_("strong",[v._v("数字信息转换成电信号")]),v._v("，才能在网线上传输，这才是真正的数据发送过程。负责这一操作的是 "),_("strong",[v._v("网卡")]),v._v("，控制网卡的是网卡驱动程序。")]),v._v(" "),_("p",[v._v("网卡驱动获取网络包后，会将其复制到网卡内的缓存区中，接着会在其开头上加上 "),_("strong",[v._v("报头和起始帧分界符")]),v._v("，在末尾加上用于检测错误的 "),_("strong",[v._v("帧校验序列")]),v._v("。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410185710450.png",alt:"image-20230410185710450"}})]),v._v(" "),_("ul",[_("li",[v._v("起始帧分界符是一个用来表示包起始位置的标记")]),v._v(" "),_("li",[v._v("帧校验序列用来检查包传输过程是否发生损坏")])]),v._v(" "),_("h2",{attrs:{id:"交换机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#交换机"}},[v._v("#")]),v._v(" 交换机")]),v._v(" "),_("p",[v._v("设计交换机的目的就是将网络包原样地转发到目的地。交换机工作在 MAC 层，也称为 "),_("strong",[v._v("二层网络设备")]),v._v("。")]),v._v(" "),_("blockquote",[_("p",[v._v("交换机的包接受操作")])]),v._v(" "),_("ol",[_("li",[_("p",[v._v("电信号到达网线接口，交换机里面的模块进行接收，然后交换机里面的模块将电信号转换成数字信号")])]),v._v(" "),_("li",[_("p",[v._v("进行包末尾的 FCS 校验错误，如果没问题就放到缓冲区；这部分的基本操作与网卡类似，但是计算机的网卡本身具有 MAC 地址，并可以通过核对收到的包的接收方 MAC 地址判断是不是发给自己的。相对地，交换方的端口并不核对，直接将所有的包存到缓冲区中。（交换机的端口不具有 MAC 地址）")])]),v._v(" "),_("li",[_("p",[v._v("包存入缓冲区后，需要查询这个包的接收方 MAC 地址是否在 MAC 地址表中记录。交换机的 MAC 地址表主要包含两个信息")]),v._v(" "),_("ol",[_("li",[v._v("设备的 MAC 地址")]),v._v(" "),_("li",[v._v("设备连接在交换机上的哪个端口")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410190920705.png",alt:"image-20230410190920705"}})])]),v._v(" "),_("li",[_("p",[v._v("交换机根据 MAC 地址表查询 MAC 地址，然后将信号发送给相应的端口")])])]),v._v(" "),_("blockquote",[_("p",[v._v("当 MAC 地址表找不到指定的 MAC 地址怎么办？")])]),v._v(" "),_("p",[v._v("地址表中找不到指定的 MAC 地址。有以下几个原因：")]),v._v(" "),_("ul",[_("li",[v._v("该 MAC 地址设备还没有向交换机发送过包")]),v._v(" "),_("li",[v._v("该 MAC 地址设备有一段时间没有工作导致地址从地址表中删除")])]),v._v(" "),_("p",[v._v("这种情况下，交换机只能将包转发到除了源端口之外的所有端口上，无论该 MAC 地址设备连接在哪个端口上都能收到这个包。")]),v._v(" "),_("p",[v._v("这样做不会产生什么问题，因为以太网的设计本来就是将包发送到整个网络上的，"),_("strong",[v._v("只有相应的接收者才能接受包，而其他的设备就直接忽略这个包")]),v._v("。")]),v._v(" "),_("h2",{attrs:{id:"路由器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#路由器"}},[v._v("#")]),v._v(" 路由器")]),v._v(" "),_("blockquote",[_("p",[v._v("路由器与交换机的区别")])]),v._v(" "),_("p",[v._v("路由器的工作原理与交换机类似，也是通过查表判断包转发的目标。但是它们也是有区别的，主要有以下几个方面：")]),v._v(" "),_("ul",[_("li",[v._v("路由器是基于 IP 设计的（三层网络设备），路由器的各个端口都有属于自己的 MAC 地址和 IP 地址")]),v._v(" "),_("li",[v._v("交换机是基于以太网设计的（二层网络设备），交换机的端口不具有 MAC 地址")])]),v._v(" "),_("blockquote",[_("p",[v._v("路由器基本原理")])]),v._v(" "),_("p",[v._v("路由器的端口具有 MAC 地址，所以它可以称为以太网的发送方和接收方；同时还具有 IP 地址，所以从某个意义上来说，路由器和计算机的网卡是一样的。")]),v._v(" "),_("p",[v._v("当转发包的时候，路由器端口会接收发给自己的以太网包，然后 路由表 查询转发目标，再由相应的端口作为目的方以以太包发送出去。")]),v._v(" "),_("blockquote",[_("p",[v._v("路由器包接收操作")])]),v._v(" "),_("ol",[_("li",[v._v("电信号到达网线接口部分，路由器中的模块会将电信号转换成数字信号，然后通过包末尾的 FCS 进行错误校验")]),v._v(" "),_("li",[v._v("检查 MAC 头部的 接收方 MAC 地址是不是发给自己的包，是就将其放在缓存区中；不是的话就直接丢弃这个包")])]),v._v(" "),_("blockquote",[_("p",[v._v("查询路由表确定输出端口")])]),v._v(" "),_("ol",[_("li",[v._v("完成包接收操作之后，路由器就会去掉包开头的 MAC 头部。MAC 头部的作用就是将 "),_("strong",[v._v("包送达路由器")]),v._v("。其中的 接收方 MAC 地址就是路由器端口的 MAC 地址")]),v._v(" "),_("li",[v._v("接着，路由器会根据 MAC 头部后方的 IP 头部中的内容进行包的转发操作")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230410192713627.png",alt:"image-20230410192713627"}})]),v._v(" "),_("blockquote",[_("p",[v._v("路由器包发送操作")])]),v._v(" "),_("ol",[_("li",[v._v("如果网关是一个 IP 地址，那么这个 IP 地址就是我们要转发的目标地址，还未抵达终点，还需要继续进行路由器的转发")]),v._v(" "),_("li",[v._v("如果网管是空的话，IP 头部中的接收方 IP 地址就是要转发到的目标地址，也就是找到了 IP 包头里面的目标地址，说明已经抵达了终点")]),v._v(" "),_("li",[v._v("知道了对方的 IP 地址之后，接下来需要使用 ARP 协议来根据 IP 查询 MAC 地址，并将查询结果作为接受方的 MAC 地址（注意：路由器也有 ARP 缓存，因此首先会在 ARP 缓存中查询，查询不到才会发送 ARP 查询请求）")]),v._v(" "),_("li",[v._v("接着发送 MAC 地址字段，这里填写输出端口的 MAC 地址，还有一个 以太型字段，填写 0800（十六进制），表示是 IP 协议。")]),v._v(" "),_("li",[v._v("网络包完成后，会将其转换成电信号并通过端口发送出去。这一步与计算机信号转换相同")]),v._v(" "),_("li",[v._v("发出去的网络包会通过交换机到达下一个路由器。由于接收方 MAC 地址就是下一个路由器的地址，所以交换机会根据这一个地址将网络包传输到下一个路由器，重复其过程，直到最后一个目的地。")])]),v._v(" "),_("p",[v._v("可以发现，在网络包传输的过程中，源 IP 和目标 IP 是不会变的，一直变的是 MAC 地址，因为需要 MAC 地址在以太网内进行两个设备之间进行网络包传输。")]),v._v(" "),_("h2",{attrs:{id:"服务器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务器"}},[v._v("#")]),v._v(" 服务器")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/25.jpg",alt:"网络分层模型"}})]),v._v(" "),_("ol",[_("li",[v._v("数据包到达服务器后，服务器首先会先查看 MAC 头部，查看和自己的 MAC 地址是否符合，符合就将包收起来")]),v._v(" "),_("li",[v._v("继续查看数据包的 IP 头，如果 IP 地址符合，根据 IP 头中的协议项，知道自己上层是 TCP 协议")]),v._v(" "),_("li",[v._v("继续查看TCP 的头，里面有序列号，需要看一看这个序列包是不是我想要的，如果是就放入缓存中然后返回一个 ACK，如果不是就丢弃。TCP 头部里面还有端口号， HTTP 的服务器正在监听这个端口号。于是，服务器自然就知道是 HTTP 进程想要这个包，于是就将包发给 HTTP 进程。")]),v._v(" "),_("li",[v._v("服务器的 HTTP 进程看到，原来这个请求是要访问一个页面，于是就把这个网页封装在 HTTP 响应报文里。HTTP 响应报文也需要穿上 TCP、IP、MAC 头部，不过这次是源地址是服务器 IP 地址，目的地址是客户端 IP 地址。")]),v._v(" "),_("li",[v._v("然后反向操作！！！")])]),v._v(" "),_("h4",{attrs:{id:"相关链接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相关链接"}},[v._v("#")]),v._v(" 相关链接")]),v._v(" "),_("p",[_("a",{attrs:{href:"https://xiaolincoding.com/network/1_base/what_happen_url.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("键入网址到网页显示，期间发生了什么？"),_("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=g.exports}}]);