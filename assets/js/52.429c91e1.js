(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{329:function(a,t,s){"use strict";s.r(t);var v=s(10),r=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"类加载过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类加载过程"}},[a._v("#")]),a._v(" 类加载过程")]),a._v(" "),t("h2",{attrs:{id:"类的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类的生命周期"}},[a._v("#")]),a._v(" 类的生命周期")]),a._v(" "),t("p",[a._v("一个类型从被加载到虚拟机内存开始，到卸载出内存为止，它的整个生命周期将会经历 "),t("strong",[a._v("加载、验证、准备、解析、初始化、使用、卸载")]),a._v(" 这七个阶段")]),a._v(" "),t("p",[a._v("其中 "),t("strong",[a._v("验证、准备、解析")]),a._v(" 三个部分统称为 "),t("strong",[a._v("连接")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230315100659944.png",alt:"image-20230315100659944"}})]),a._v(" "),t("h2",{attrs:{id:"类加载过程-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类加载过程-2"}},[a._v("#")]),a._v(" 类加载过程")]),a._v(" "),t("p",[t("strong",[a._v("Class 文件需要加载到虚拟机中之后才能运行和使用，那么虚拟机是如何加载这些 Class 文件呢？")])]),a._v(" "),t("p",[a._v("系统加载 Class 类型的文件主要三步："),t("strong",[a._v("加载->连接->初始化")]),a._v("。连接过程又可分为三步："),t("strong",[a._v("验证->准备->解析")]),a._v("。")]),a._v(" "),t("h3",{attrs:{id:"加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加载"}},[a._v("#")]),a._v(" 加载")]),a._v(" "),t("p",[a._v("加载是类加载的第一步，主要完成以下三件事")]),a._v(" "),t("ol",[t("li",[a._v("通过全类名获取定义此类的二进制字节流。")]),a._v(" "),t("li",[a._v("将字节流所代表的静态存储结构转换为方法区的运行时数据结构。")]),a._v(" "),t("li",[a._v("在内存中生成一个代表该类的 "),t("code",[a._v("Class")]),a._v(" 对象，作为方法区这些数据的访问入口。")])]),a._v(" "),t("h3",{attrs:{id:"验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[a._v("#")]),a._v(" 验证")]),a._v(" "),t("p",[t("strong",[a._v("验证是连接阶段的第一步，这一阶段的目的是确保 Class 文件的字节流中包含的信息符合《Java 虚拟机规范》的全部约束要求，保证这些信息被当作代码运行后不会危害虚拟机自身的安全。")])]),a._v(" "),t("p",[a._v("验证阶段主要由四个检验阶段组成：")]),a._v(" "),t("ol",[t("li",[a._v("文件格式验证（Class 文件格式检查）")]),a._v(" "),t("li",[a._v("元数据验证（字节码语义检查）")]),a._v(" "),t("li",[a._v("字节码验证（程序语义检查）")]),a._v(" "),t("li",[a._v("符号引用验证（类的正确性检查）")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/BXuan-Yang/blogImage/img/image-20230315103252133.png",alt:"image-20230315103252133"}})]),a._v(" "),t("h3",{attrs:{id:"准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[a._v("#")]),a._v(" 准备")]),a._v(" "),t("h3",{attrs:{id:"解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解析"}},[a._v("#")]),a._v(" 解析")]),a._v(" "),t("h3",{attrs:{id:"初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[a._v("#")]),a._v(" 初始化")]),a._v(" "),t("h2",{attrs:{id:"类卸载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类卸载"}},[a._v("#")]),a._v(" 类卸载")])])}),[],!1,null,null,null);t.default=r.exports}}]);